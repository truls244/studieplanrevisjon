"""fixed program ansvarlig skikkelig

Revision ID: 81bdc8964731
Revises: c9c2f94d037e
Create Date: 2025-05-15 02:15:55.279367

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '81bdc8964731'
down_revision = 'c9c2f94d037e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verificationtokens')
    op.drop_table('notifications')
    op.drop_table('course')
    op.drop_table('followup')
    op.drop_table('studyplan')
    op.drop_table('user')
    op.drop_table('institute')
    op.drop_table('elective_groups')
    op.drop_table('prerequisites')
    op.drop_table('semester_courses')
    op.drop_table('log')
    op.drop_table('semester')
    op.drop_table('studyprogram')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('studyprogram',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('degree_type', sa.VARCHAR(length=8), nullable=False),
    sa.Column('institute_id', sa.INTEGER(), nullable=False),
    sa.Column('semester_number', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('program_code', sa.VARCHAR(length=80), nullable=False),
    sa.Column('program_ansvarlig_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['institute_id'], ['institute.id'], ),
    sa.ForeignKeyConstraint(['program_ansvarlig_id'], ['user.id'], name='fk_studyprogram_program_ansvarlig_id_user'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('semester',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('semester_number', sa.INTEGER(), nullable=False),
    sa.Column('studyplan_id', sa.INTEGER(), nullable=False),
    sa.Column('term', sa.VARCHAR(length=1), nullable=False),
    sa.ForeignKeyConstraint(['studyplan_id'], ['studyplan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('time', sa.DATETIME(), nullable=False),
    sa.Column('message', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('semester_courses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('semester_id', sa.INTEGER(), nullable=False),
    sa.Column('course_id', sa.INTEGER(), nullable=False),
    sa.Column('is_elective', sa.BOOLEAN(), nullable=True),
    sa.Column('category_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['elective_groups.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('semester_id', 'course_id', name='uix_semester_course')
    )
    op.create_table('prerequisites',
    sa.Column('course_id', sa.INTEGER(), nullable=False),
    sa.Column('prerequisite_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'prerequisite_id')
    )
    op.create_table('elective_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('institute',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('ansvarlig', sa.VARCHAR(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=80), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), nullable=False),
    sa.Column('role', sa.VARCHAR(length=9), nullable=False),
    sa.Column('verified', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studyplan',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('year', sa.INTEGER(), nullable=False),
    sa.Column('studyprogram_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['studyprogram_id'], ['studyprogram.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year', 'studyprogram_id', name='unique_year_studyprogram')
    )
    op.create_table('followup',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('studyplan_id', sa.INTEGER(), nullable=False),
    sa.Column('followup_courses', sqlite.JSON(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=13), nullable=False),
    sa.Column('notes', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['studyplan_id'], ['studyplan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('courseCode', sa.VARCHAR(length=80), nullable=False),
    sa.Column('semester', sa.VARCHAR(length=1), nullable=False),
    sa.Column('credits', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('degree', sa.VARCHAR(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('program_id', sa.INTEGER(), nullable=True),
    sa.Column('source_program_id', sa.INTEGER(), nullable=True),
    sa.Column('recipient_id', sa.INTEGER(), nullable=True),
    sa.Column('sender_id', sa.INTEGER(), nullable=True),
    sa.Column('message', sa.VARCHAR(length=200), nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), nullable=True),
    sa.Column('is_solved', sa.BOOLEAN(), nullable=False),
    sa.Column('is_acknowledged', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('email_sent', sa.BOOLEAN(), nullable=True),
    sa.Column('noti_type', sa.VARCHAR(length=12), nullable=False),
    sa.Column('noti_id', sa.INTEGER(), nullable=False),
    sa.Column('notification_group_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('target_term', sa.VARCHAR(length=1), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['studyprogram.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['source_program_id'], ['studyprogram.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verificationtokens',
    sa.Column('token', sa.VARCHAR(length=36), nullable=False),
    sa.Column('expiration_time', sa.DATETIME(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=80), nullable=False),
    sa.PrimaryKeyConstraint('token')
    )
    # ### end Alembic commands ###
